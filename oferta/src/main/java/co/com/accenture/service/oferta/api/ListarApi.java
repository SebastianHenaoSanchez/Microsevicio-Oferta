/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package co.com.accenture.service.oferta.api;

import co.com.accenture.service.oferta.model.JsonApiBodyRequest;
import co.com.accenture.service.oferta.model.JsonApiBodyResponseErrors;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-26T21:24:59.171-05:00")

@Api(value = "listar", description = "the listar API")
public interface ListarApi {

    @ApiOperation(value = "Retorna todas las ofertas", nickname = "listarGet", notes = "Retorna todas las ofertas", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "lista de ofertas", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "ofertas no encontradas", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarGet();
    
    @ApiOperation(value = "Retorna todas las ofertas activas", nickname = "listarGet", notes = "Retorna todas las ofertas activas", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "lista de ofertas activas", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "ofertas activas no encontradas", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/activas",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarGetActivas();

    
    @ApiOperation(value = "buscar oferta por id de negocio", nickname = "listarIdnegocioIdnegocioGet", notes = "retorna las ofertas que tiene un negocio", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "id_negocio no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/idnegocio/{idnegocio}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdnegocioIdnegocioGet(@ApiParam(value = "ID del negocio",required=true) @PathVariable("idnegocio") String idnegocio);
    
    //para listar por id de negocio y tipo de ooferta
    @ApiOperation(value = "buscar oferta por id de negocio y tipo de oferta", nickname = "listarIdnegocioIdnegocioTipoOfertaGet", notes = "retorna las ofertas que tiene un negocio dependiendo si es descuento o promocion", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "id_negocio no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/filtro/{idnegocio}/{tipooferta}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdnegocioIdnegocioTipoOfertaGet(@ApiParam(value = "ID del negocio",required=true) @PathVariable("idnegocio") String idnegocio,  @PathVariable("tipooferta") String tipooferta);

    @ApiOperation(value = "buscar oferta por id de oferta", nickname = "listarIdofertaIdofertaGet", notes = "retorna los negocios que tiene un administrador", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "oferta no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/idoferta/{idoferta}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdofertaIdofertaGet(@ApiParam(value = "ID de la oferta",required=true) @PathVariable("idoferta") String idoferta);


    @ApiOperation(value = "buscar ofertas por producto", nickname = "listarProductoProductoGet", notes = "retorna las ofertas de un producto", response = JsonApiBodyRequest.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "listado de ofertas por producto", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "ofertas no encontradas", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/producto/{producto}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<JsonApiBodyRequest> listarProductoProductoGet(@ApiParam(value = "ofertas por productos",required=true) @PathVariable("producto") String producto);

}
